/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10.2/userguide/java_library_plugin.html
 */


plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}


// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    mavenLocal()
}

apply plugin: 'java'

configurations {
	myConfig
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    compile "org.apache.commons:commons-lang3:3.3.2"
    myConfig "org.apache.commons:commons-lang3:3.3.2"
}

 

sourceSets {
	main.java.srcDir "src/main"
	test.java.srcDir "src/test"
}

jar {
    from configurations.myConfig.collect { zipTree it }
	manifest.attributes "Main-Class": "pl.jaceksysiak.main.App"
}

task run (type: JavaExec, dependsOn: classes) { 
	main 'pl.jaceksysiak.main.App'
	classpath sourceSets.main.runtimeClasspath
	args 'Hello World part 2'
}

task runJar (type: Exec, dependsOn: jar) {
	executable 'java'
	args '-jar', "$jar.archivePath", 'Hello World part 2'
}

task writeGreeting {

	outputs.file file('greeting.txt')
} << {file('greetings.txt').text = 'Hello, fellow citizen!'}





























